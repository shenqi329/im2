// Code generated by protoc-gen-go.
// source: login.proto
// DO NOT EDIT!

package bean

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// messageType = 1
type DeviceRegisteRequest struct {
	Rid      int64  `protobuf:"varint,1,opt,name=rid" json:"rid,omitempty"`
	SsoToken string `protobuf:"bytes,11,opt,name=ssoToken" json:"ssoToken,omitempty"`
	AppId    string `protobuf:"bytes,12,opt,name=appId" json:"appId,omitempty"`
	DeviceId string `protobuf:"bytes,13,opt,name=deviceId" json:"deviceId,omitempty"`
	Platform string `protobuf:"bytes,14,opt,name=platform" json:"platform,omitempty"`
}

func (m *DeviceRegisteRequest) Reset()                    { *m = DeviceRegisteRequest{} }
func (m *DeviceRegisteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeviceRegisteRequest) ProtoMessage()               {}
func (*DeviceRegisteRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *DeviceRegisteRequest) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *DeviceRegisteRequest) GetSsoToken() string {
	if m != nil {
		return m.SsoToken
	}
	return ""
}

func (m *DeviceRegisteRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *DeviceRegisteRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DeviceRegisteRequest) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

// messageType = 2
type DeviceRegisteResponse struct {
	Rid   int64  `protobuf:"varint,1,opt,name=rid" json:"rid,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Desc  string `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
	Token string `protobuf:"bytes,11,opt,name=token" json:"token,omitempty"`
}

func (m *DeviceRegisteResponse) Reset()                    { *m = DeviceRegisteResponse{} }
func (m *DeviceRegisteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeviceRegisteResponse) ProtoMessage()               {}
func (*DeviceRegisteResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *DeviceRegisteResponse) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *DeviceRegisteResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DeviceRegisteResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *DeviceRegisteResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// messageType = 3
type DeviceLoginRequest struct {
	Rid      int64  `protobuf:"varint,1,opt,name=rid" json:"rid,omitempty"`
	Token    string `protobuf:"bytes,11,opt,name=token" json:"token,omitempty"`
	AppId    string `protobuf:"bytes,12,opt,name=appId" json:"appId,omitempty"`
	DeviceId string `protobuf:"bytes,13,opt,name=deviceId" json:"deviceId,omitempty"`
	Platform string `protobuf:"bytes,14,opt,name=platform" json:"platform,omitempty"`
}

func (m *DeviceLoginRequest) Reset()                    { *m = DeviceLoginRequest{} }
func (m *DeviceLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*DeviceLoginRequest) ProtoMessage()               {}
func (*DeviceLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *DeviceLoginRequest) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *DeviceLoginRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *DeviceLoginRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *DeviceLoginRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DeviceLoginRequest) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

// messageType = 4
type DeviceLoginResponse struct {
	Rid  int64  `protobuf:"varint,1,opt,name=rid" json:"rid,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
}

func (m *DeviceLoginResponse) Reset()                    { *m = DeviceLoginResponse{} }
func (m *DeviceLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*DeviceLoginResponse) ProtoMessage()               {}
func (*DeviceLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *DeviceLoginResponse) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *DeviceLoginResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DeviceLoginResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func init() {
	proto.RegisterType((*DeviceRegisteRequest)(nil), "bean.DeviceRegisteRequest")
	proto.RegisterType((*DeviceRegisteResponse)(nil), "bean.DeviceRegisteResponse")
	proto.RegisterType((*DeviceLoginRequest)(nil), "bean.DeviceLoginRequest")
	proto.RegisterType((*DeviceLoginResponse)(nil), "bean.DeviceLoginResponse")
}

func init() { proto.RegisterFile("login.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc9, 0x4f, 0xcf,
	0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x49, 0x4a, 0x4d, 0xcc, 0x53, 0x9a, 0xc4,
	0xc8, 0x25, 0xe2, 0x92, 0x5a, 0x96, 0x99, 0x9c, 0x1a, 0x94, 0x9a, 0x9e, 0x59, 0x5c, 0x92, 0x1a,
	0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0x24, 0xc0, 0xc5, 0x5c, 0x94, 0x99, 0x22, 0xc1, 0xa8,
	0xc0, 0xa8, 0xc1, 0x1c, 0x04, 0x62, 0x0a, 0x49, 0x71, 0x71, 0x14, 0x17, 0xe7, 0x87, 0xe4, 0x67,
	0xa7, 0xe6, 0x49, 0x70, 0x2b, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xf9, 0x42, 0x22, 0x5c, 0xac, 0x89,
	0x05, 0x05, 0x9e, 0x29, 0x12, 0x3c, 0x60, 0x09, 0x08, 0x07, 0xa4, 0x23, 0x05, 0x6c, 0xb6, 0x67,
	0x8a, 0x04, 0x2f, 0x44, 0x07, 0x8c, 0x0f, 0x92, 0x2b, 0xc8, 0x49, 0x2c, 0x49, 0xcb, 0x2f, 0xca,
	0x95, 0xe0, 0x83, 0xc8, 0xc1, 0xf8, 0x4a, 0xe9, 0x5c, 0xa2, 0x68, 0x6e, 0x2a, 0x2e, 0xc8, 0xcf,
	0x2b, 0x4e, 0xc5, 0xe2, 0x28, 0x21, 0x2e, 0x96, 0xe4, 0xfc, 0x94, 0x54, 0x09, 0x26, 0xb0, 0x11,
	0x60, 0x36, 0x48, 0x2c, 0x25, 0xb5, 0x38, 0x59, 0x82, 0x19, 0x22, 0x06, 0x62, 0x83, 0x1c, 0x58,
	0x82, 0xe4, 0x72, 0x08, 0x47, 0xa9, 0x8b, 0x91, 0x4b, 0x08, 0x62, 0x93, 0x0f, 0x28, 0x64, 0x70,
	0xfb, 0x1d, 0xab, 0x76, 0x2a, 0xfb, 0xda, 0x9f, 0x4b, 0x18, 0xc5, 0x2d, 0x94, 0xfa, 0x39, 0x89,
	0x0d, 0x1c, 0xd1, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x01, 0xaa, 0x62, 0xf7, 0x01,
	0x00, 0x00,
}
